services:
  postgres:
    image: postgres:15.3-alpine3.18
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes: 
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 5
  
  websocket-server:
    build:
      context: ./websocket-server
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8000-8030:8000-8030"
    environment:
      - DB_HOST=postgres
      - DB_USER=wss_dev
      - DB_PASSWORD=postgres
      - DB_NAME=postgres
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REGISTRY_HOST=http-server
      - REGISTRY_PORT=8080

  http-server:
    build:
      context: ./http-server
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - '8080:8080'
    environment:
      - DB_HOST=postgres
      - DB_USER=api_dev
      - DB_PASSWORD=postgres
      - DB_NAME=postgres
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      
  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - '6379:6379'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
